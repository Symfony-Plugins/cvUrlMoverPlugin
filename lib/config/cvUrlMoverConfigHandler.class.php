<?php
/*
 * This file is part of the cvUrlMoverPlugin package
 * (c) 2007 Carl Vondrick <carl@carlsoft.net>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

/**
  * Configuration file.  This configures the event dispatcher.
  *
  * @author Carl Vondrick <carl@carlsoft.net>
  * @package cvUrlMoverPlugin
  * @version SVN: $Id$
  */

class cvUrlMoverConfigHandler extends sfYamlConfigHandler
{
  public function execute($config)
  {
    $retval = "<?php\n".
                "// auto-generated by " . __CLASS__ . "\n".
                "// date: %s\n\n";
    $retval = sprintf($retval, date('Y/m/d H:i:s'));

    $retval .= "\$matchers = array(\n";

    foreach ($this->parseYamls($config) as $name => $bcurl)
    {
      if (is_string($bcurl))
      {
        $bcurl = array(
          'type' => 'preg',
          'replace' => true,
          'replacement' => $bcurl
        );
      }

      if (!isset($bcurl['type']))
      {
        throw new sfConfigurationException(sprintf('Backwards-compatible route %s must have a type key.', $name));
      }

      if (!isset($bcurl['replacement']))
      {
        throw new sfConfigurationException('Missing replacement for ' . $name);
      }

      $class = 'cvUrlMoverMatcher' . ucfirst($bcurl['type']);

      if (!class_exists($class, true))
      {
        throw new sfConfigurationException(sprintf('Backwards-compatible route %s has invalid type %s.', $name, $bcurl['type']));
      }

      $retval .= "  " . call_user_func(array($class, 'generate'), $name, $bcurl['replacement'], $bcurl) . ",\n";
    }

    $retval .= ");\n\n";

    $retval .= "\$schema = new cvUrlMoverMatcherSchema(\$matchers);\n\n";

    $retval .= "return \$schema;\n";

    return $retval;
  }
}